// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
   provider = "mysql"
    url      = env("DATABASE_URL")
}


model Produit {
  produit_id     Int      @unique @id @default(autoincrement())
  code_produit   String   @unique
  description    String
  designation    String
  prix_Achat     String
  prix_Vente     Float
  date_expiration DateTime @db.Date   
  quantite       Int
  photo          String?
  categorie_id   Int 
  Seuil_reapprovisionnement Int 

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categorie      Categorie @relation(fields: [categorie_id], references: [categorie_id])
  stock          Stock?
  ajustementsDeStock       AjustementsDeStock[]
}

model Categorie {
  categorie_id   Int      @id @default(autoincrement())
  nom            String
  produits       Produit[]
}

model Stock {
  stock_id         Int      @id @default(autoincrement())
  produit_id       Int      @unique
  stock_disponible Int
  stock_engage     Int
  stock_total      Int

  createdAt DateTime @default(now())
  produit   Produit   @relation(fields: [produit_id], references: [produit_id])
}


model AjustementsDeStock {
  ajustement_id     Int     @id @default(autoincrement())
  produit_id        Int
  quantite_ajustee  Int
  raison            String
  utilisateur_id    Int     //Change this After we design the user Roles 
  timestamp         DateTime

  produit           Produit @relation(fields: [produit_id], references: [produit_id])
}
 